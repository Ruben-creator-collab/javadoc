package ejercicio4.java;

import java.util.*;
import java.util.concurrent.*;

// Interfaz para tareas
interface Tarea {
    void ejecutar();
}

// Clase principal
public class GestorTareas {

    public static void main(String[] args) {
        System.out.println("üìù Gestor de Tareas Iniciado!");

        // Mapa concurrente para contar ejecuciones
        ConcurrentHashMap<String, Integer> contador = new ConcurrentHashMap<>();

        // Lista de tareas
        List<Tarea> tareas = new ArrayList<>();

        // Crear algunas tareas
        tareas.add(() -> ejecutarTarea("Lavar platos", 2, contador));
        tareas.add(() -> ejecutarTarea("Estudiar Java", 5, contador));
        tareas.add(() -> ejecutarTarea("Hacer ejercicio", 3, contador));
        tareas.add(() -> ejecutarTarea("Ver serie", 1, contador));

        // Ejecutar todas las tareas en hilos separados
        List<Thread> hilos = new ArrayList<>();
        for (Tarea tarea : tareas) {
            Thread hilo = new Thread(tarea::ejecutar);
            hilos.add(hilo);
            hilo.start();
        }

        // Esperar a que todas terminen
        hilos.forEach(h -> {
            try { h.join(); } catch (InterruptedException e) { e.printStackTrace(); }
        });

        // Mostrar tareas con prioridad >= 3 usando Stream
        System.out.println("\nüìå Tareas importantes (prioridad >= 3):");
        contador.entrySet().stream()
                .filter(e -> e.getValue() >= 3)
                .forEach(e -> System.out.println(e.getKey() + " -> veces ejecutadas: " + e.getValue()));

        System.out.println("\n‚úÖ Todas las tareas completadas!");
    }

    // M√©todo que simula ejecutar una tarea
    static void ejecutarTarea(String nombre, int prioridad, ConcurrentHashMap<String, Integer> contador) {
        System.out.println("Ejecutando: " + nombre + " (prioridad " + prioridad + ")");
        try {
            Thread.sleep(500); // Simula tiempo de ejecuci√≥n
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        contador.merge(nombre, prioridad, Integer::sum);
        System.out.println("‚úÖ Tarea completada: " + nombre);
    }
}
